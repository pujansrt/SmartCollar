service: collar-service
plugins:
  - serverless-offline
provider:
  name: aws
  runtime: nodejs8.10
  region: us-east-1
  stage: ${opt:stage,'local'}
  memorySize: 1024
  timeout: 30
  environment: ${file(./env.yml):${opt:stage, self:provider.stage}}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - ec2:CreateNetworkInterface
        - ec2:DescribeNetworkInterfaces
        - ec2:DeleteNetworkInterface
        - ssm:Describe*
        - ssm:Get*
        - ssm:List*
      Resource: "*"
    - Effect: Allow
      Action:
        - cloudformation: Create*
        - cloudformation: Describe*
        - cloudformation: List*
        - cloudformation: Update*
        - cloudformation: Execute*
      Resource: "*"
    - Effect: Allow
      Action:
        - 'lambda:InvokeFunction'
      Resource:
        - Fn::Join:
          - ':'
          - - arn:aws:lambda
            - Ref: AWS::Region
            - Ref: AWS::AccountId
            - function:*

functions:
  graphql:
    handler: src/v1/graphql/handler.graphql
    environment:
      STAGE: ${self:provider.stage}
    events:
      - http:
          path: graphql
          method: post
          cors: true
      - http:
          path: graphql
          method: get
